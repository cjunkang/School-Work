//Name:Chong Jun Kang
//StudentID:6461542
//Origin: GeeksForGeeks

import java.math.BigInteger; 
import java.security.MessageDigest; 
import java.security.NoSuchAlgorithmException; 
  
public class SHA { 
    public static String encryptThisString(String input) 
    { 
        try { 
            // getInstance() method is called with algorithm SHA-1 
            MessageDigest md = MessageDigest.getInstance("SHA-1"); 
  
            // digest() method is called 
            // to calculate message digest of the input string 
            // returned as array of byte 
            byte[] messageDigest = md.digest(input.getBytes()); 
  
            // Convert byte array into signum representation 
            BigInteger no = new BigInteger(1, messageDigest); 
			//System.out.println("integer: " +no);
  
            // Convert message digest into hex value 
            String hashtext = no.toString(16); 
  
            // Add preceding 0s to make it 32 bit 
            while (hashtext.length() < 32) { 
                hashtext = "0" + hashtext; 
            } 
			String word = hashtext.substring(hashtext.length() - 3);
            // return the HashText 
            return word; 
        } 
  
        // For specifying wrong message digest algorithms 
        catch (NoSuchAlgorithmException e) { 
            throw new RuntimeException(e); 
        } 
    } 
  
    public static void main(String args[]) throws 
                                       NoSuchAlgorithmException 
    { 
	boolean A = false;
		int y = 2;
        System.out.println("HashCode Generated by SHA-1 for: ");
		while (A == false)
		{
		int x = 1;
        String s1 = "The Cat-In-The-Hat owes [Chong] " + x + " dollars"; 
        String s2 = "The Cat-In-The-Hat owes [Chong] " + y + " dollars"; 
		String hash1 = encryptThisString(s1);
		String hash2 = encryptThisString(s2);
			if (hash1.equals(hash2))
			{
				A = true;
		System.out.println("\n" + s1 + " : " + hash1); 
		System.out.println("\n" + s2 + " : " + hash2); 
		System.out.println("\n" + "When x: $" + x + " and y: $" + y + " the same hash is produced"); 
				
			}
			y++;
		}
    } 
} 